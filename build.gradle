plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.7'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'code.four'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

def activeProfile = System.getenv("SPRING_PROFILES_ACTIVE") ?: "dev"

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.modelmapper:modelmapper:3.1.1'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'com.google.code.gson:gson:2.10.1'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0' // 최신 JUnit 버전 사용
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0' // 최신 JUnit 버전 사용
	implementation 'com.h2database:h2'
	runtimeOnly 'com.h2database:h2'
}

tasks.named('test') {
	useJUnitPlatform()
}

springBoot {
	mainClass = 'code.four.DevdocApplication'
}

bootJar {
	archiveFileName = 'backend-0.0.1.jar'
}
